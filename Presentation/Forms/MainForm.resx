<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        toJpPdYAAAAASUVORK5CYII=
</value>
  </data>
</root>